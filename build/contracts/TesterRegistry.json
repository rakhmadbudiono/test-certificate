{
  "contractName": "TesterRegistry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isTester",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "institutionName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "contact",
          "type": "string"
        }
      ],
      "name": "register",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTester\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"institutionName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contact\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/rakhmad/kuliah/TA/test-certificate/contracts/TesterRegistry.sol\":\"TesterRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/rakhmad/kuliah/TA/test-certificate/contracts/TesterRegistry.sol\":{\"keccak256\":\"0x9dbf6ef909de9e3d87d61b7c014b8247143c17796e22996d4c393cba53878040\",\"urls\":[\"bzz-raw://78f6c9d7a7a6faad17a0bad9d9c446f9d48907a5edebe0af4c60fabdc96c192f\",\"dweb:/ipfs/QmV1v4vg2vJ2KU3Fmzme8EJCPkU315Mo9znkMTRvRtQTsf\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061048a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634cd08d031461003b578063bd630dc714610224575b600080fd5b6102226004803603606081101561005157600080fd5b810190808035906020019064010000000081111561006e57600080fd5b82018360208201111561008057600080fd5b803590602001918460018302840111640100000000831117156100a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561010557600080fd5b82018360208201111561011757600080fd5b8035906020019184600183028401116401000000008311171561013957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561019c57600080fd5b8201836020820111156101ae57600080fd5b803590602001918460018302840111640100000000831117156101d057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610280565b005b6102666004803603602081101561023a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610390565b604051808215151515815260200191505060405180910390f35b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550604051806060016040528084815260200183815260200182815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061034d9291906103b0565b50602082015181600101908051906020019061036a9291906103b0565b5060408201518160020190805190602001906103879291906103b0565b50905050505050565b60006020528060005260406000206000915054906101000a900460ff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103f157805160ff191683800117855561041f565b8280016001018555821561041f579182015b8281111561041e578251825591602001919060010190610403565b5b50905061042c9190610430565b5090565b61045291905b8082111561044e576000816000905550600101610436565b5090565b9056fea265627a7a723158209ee7c99b77be932ba3d4d3af52d1c6a5fbf64333dcd3bc7f91e3df6aff0d118664736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80634cd08d031461003b578063bd630dc714610224575b600080fd5b6102226004803603606081101561005157600080fd5b810190808035906020019064010000000081111561006e57600080fd5b82018360208201111561008057600080fd5b803590602001918460018302840111640100000000831117156100a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561010557600080fd5b82018360208201111561011757600080fd5b8035906020019184600183028401116401000000008311171561013957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561019c57600080fd5b8201836020820111156101ae57600080fd5b803590602001918460018302840111640100000000831117156101d057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610280565b005b6102666004803603602081101561023a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610390565b604051808215151515815260200191505060405180910390f35b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550604051806060016040528084815260200183815260200182815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061034d9291906103b0565b50602082015181600101908051906020019061036a9291906103b0565b5060408201518160020190805190602001906103879291906103b0565b50905050505050565b60006020528060005260406000206000915054906101000a900460ff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103f157805160ff191683800117855561041f565b8280016001018555821561041f579182015b8281111561041e578251825591602001919060010190610403565b5b50905061042c9190610430565b5090565b61045291905b8082111561044e576000816000905550600101610436565b5090565b9056fea265627a7a723158209ee7c99b77be932ba3d4d3af52d1c6a5fbf64333dcd3bc7f91e3df6aff0d118664736f6c63430005100032",
  "sourceMap": "25:645:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:645:2;;;;;;;",
  "deployedSourceMap": "25:645:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:645:2;;;;;;;;;;;;;;;;;;;;;;;;363:305;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;363:305:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;363:305:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;363:305:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;363:305:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;363:305:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;363:305:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;363:305:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;363:305:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;363:305:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;363:305:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;363:305:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;363:305:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;363:305:2;;;;;;;;;;;;;;;:::i;:::-;;164:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;164:38:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;363:305;499:4;476:8;:20;485:10;476:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;535:126;;;;;;;;573:15;535:126;;;;612:8;535:126;;;;643:7;535:126;;;513:7;:19;521:10;513:19;;;;;;;;;;;;;;;:148;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;363:305;;;:::o;164:38::-;;;;;;;;;;;;;;;;;;;;;;:::o;25:645::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\ncontract TesterRegistry {\n    struct Tester {\n        string institutionName;\n        string location;\n        string contact; \n    }\n\n    mapping(address=>bool) public isTester;\n    mapping (address=>Tester) testers;\n\n    modifier notTester {\n        require(!isTester[msg.sender], \"Msg.sender already a tester.\");\n        _;\n    }\n\n    function register(string memory institutionName, string memory location, string memory contact) public {\n        isTester[msg.sender] = true;\n        testers[msg.sender] = Tester({\n            institutionName: institutionName,\n            location: location,\n            contact: contact\n        });\n    }\n}",
  "sourcePath": "/home/rakhmad/kuliah/TA/test-certificate/contracts/TesterRegistry.sol",
  "ast": {
    "absolutePath": "/home/rakhmad/kuliah/TA/test-certificate/contracts/TesterRegistry.sol",
    "exportedSymbols": {
      "TesterRegistry": [
        320
      ]
    },
    "id": 321,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 263,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 320,
        "linearizedBaseContracts": [
          320
        ],
        "name": "TesterRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TesterRegistry.Tester",
            "id": 270,
            "members": [
              {
                "constant": false,
                "id": 265,
                "name": "institutionName",
                "nodeType": "VariableDeclaration",
                "scope": 270,
                "src": "79:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 264,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "79:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 267,
                "name": "location",
                "nodeType": "VariableDeclaration",
                "scope": 270,
                "src": "111:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 266,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "111:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 269,
                "name": "contact",
                "nodeType": "VariableDeclaration",
                "scope": 270,
                "src": "136:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 268,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "136:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Tester",
            "nodeType": "StructDefinition",
            "scope": 320,
            "src": "55:103:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 274,
            "name": "isTester",
            "nodeType": "VariableDeclaration",
            "scope": 320,
            "src": "164:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 273,
              "keyType": {
                "id": 271,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "172:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "164:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 272,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "181:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 278,
            "name": "testers",
            "nodeType": "VariableDeclaration",
            "scope": 320,
            "src": "208:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Tester_$270_storage_$",
              "typeString": "mapping(address => struct TesterRegistry.Tester)"
            },
            "typeName": {
              "id": 277,
              "keyType": {
                "id": 275,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "217:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "208:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Tester_$270_storage_$",
                "typeString": "mapping(address => struct TesterRegistry.Tester)"
              },
              "valueType": {
                "contractScope": null,
                "id": 276,
                "name": "Tester",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 270,
                "src": "226:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Tester_$270_storage_ptr",
                  "typeString": "struct TesterRegistry.Tester"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "267:90:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "285:21:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "isTester",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 274,
                            "src": "286:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 284,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 282,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 335,
                              "src": "295:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "295:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "286:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d73672e73656e64657220616c72656164792061207465737465722e",
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "308:30:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2ebaa243997bd85c4fd4f9fc201cdf6277605b237ad71c1a30d9111722b1e8f",
                          "typeString": "literal_string \"Msg.sender already a tester.\""
                        },
                        "value": "Msg.sender already a tester."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2ebaa243997bd85c4fd4f9fc201cdf6277605b237ad71c1a30d9111722b1e8f",
                          "typeString": "literal_string \"Msg.sender already a tester.\""
                        }
                      ],
                      "id": 280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        338,
                        339
                      ],
                      "referencedDeclaration": 339,
                      "src": "277:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "277:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "277:62:2"
                },
                {
                  "id": 289,
                  "nodeType": "PlaceholderStatement",
                  "src": "349:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 291,
            "name": "notTester",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:0:2"
            },
            "src": "248:109:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "466:202:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 300,
                        "name": "isTester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "476:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 303,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 301,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "485:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "485:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "476:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "499:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "476:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "476:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 307,
                        "name": "testers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "513:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Tester_$270_storage_$",
                          "typeString": "mapping(address => struct TesterRegistry.Tester storage ref)"
                        }
                      },
                      "id": 310,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "521:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "521:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "513:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tester_$270_storage",
                        "typeString": "struct TesterRegistry.Tester storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 312,
                          "name": "institutionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "573:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "location",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 295,
                          "src": "612:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 314,
                          "name": "contact",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "643:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 311,
                        "name": "Tester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "535:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Tester_$270_storage_ptr_$",
                          "typeString": "type(struct TesterRegistry.Tester storage pointer)"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "institutionName",
                        "location",
                        "contact"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "535:126:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tester_$270_memory",
                        "typeString": "struct TesterRegistry.Tester memory"
                      }
                    },
                    "src": "513:148:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tester_$270_storage",
                      "typeString": "struct TesterRegistry.Tester storage ref"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "513:148:2"
                }
              ]
            },
            "documentation": null,
            "id": 319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "name": "institutionName",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "381:29:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 295,
                  "name": "location",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "412:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 297,
                  "name": "contact",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "436:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "380:78:2"
            },
            "returnParameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:2"
            },
            "scope": 320,
            "src": "363:305:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 321,
        "src": "25:645:2"
      }
    ],
    "src": "0:670:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/rakhmad/kuliah/TA/test-certificate/contracts/TesterRegistry.sol",
      "exportedSymbols": {
        "TesterRegistry": [
          320
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 263,
        "name": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            320
          ],
          "name": "TesterRegistry",
          "scope": 321
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "TesterRegistry.Tester",
              "name": "Tester",
              "scope": 320,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "institutionName",
                  "scope": 270,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 264,
                    "name": "ElementaryTypeName",
                    "src": "79:6:2"
                  }
                ],
                "id": 265,
                "name": "VariableDeclaration",
                "src": "79:22:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "location",
                  "scope": 270,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 266,
                    "name": "ElementaryTypeName",
                    "src": "111:6:2"
                  }
                ],
                "id": 267,
                "name": "VariableDeclaration",
                "src": "111:15:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "contact",
                  "scope": 270,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 268,
                    "name": "ElementaryTypeName",
                    "src": "136:6:2"
                  }
                ],
                "id": 269,
                "name": "VariableDeclaration",
                "src": "136:14:2"
              }
            ],
            "id": 270,
            "name": "StructDefinition",
            "src": "55:103:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "isTester",
              "scope": 320,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 271,
                    "name": "ElementaryTypeName",
                    "src": "172:7:2"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 272,
                    "name": "ElementaryTypeName",
                    "src": "181:4:2"
                  }
                ],
                "id": 273,
                "name": "Mapping",
                "src": "164:22:2"
              }
            ],
            "id": 274,
            "name": "VariableDeclaration",
            "src": "164:38:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "testers",
              "scope": 320,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct TesterRegistry.Tester)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct TesterRegistry.Tester)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 275,
                    "name": "ElementaryTypeName",
                    "src": "217:7:2"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Tester",
                      "referencedDeclaration": 270,
                      "type": "struct TesterRegistry.Tester"
                    },
                    "id": 276,
                    "name": "UserDefinedTypeName",
                    "src": "226:6:2"
                  }
                ],
                "id": 277,
                "name": "Mapping",
                "src": "208:25:2"
              }
            ],
            "id": 278,
            "name": "VariableDeclaration",
            "src": "208:33:2"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "notTester",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 279,
                "name": "ParameterList",
                "src": "267:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f2ebaa243997bd85c4fd4f9fc201cdf6277605b237ad71c1a30d9111722b1e8f",
                                  "typeString": "literal_string \"Msg.sender already a tester.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                338,
                                339
                              ],
                              "referencedDeclaration": 339,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 280,
                            "name": "Identifier",
                            "src": "277:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 274,
                                      "type": "mapping(address => bool)",
                                      "value": "isTester"
                                    },
                                    "id": 281,
                                    "name": "Identifier",
                                    "src": "286:8:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 335,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 282,
                                        "name": "Identifier",
                                        "src": "295:3:2"
                                      }
                                    ],
                                    "id": 283,
                                    "name": "MemberAccess",
                                    "src": "295:10:2"
                                  }
                                ],
                                "id": 284,
                                "name": "IndexAccess",
                                "src": "286:20:2"
                              }
                            ],
                            "id": 285,
                            "name": "UnaryOperation",
                            "src": "285:21:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4d73672e73656e64657220616c72656164792061207465737465722e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Msg.sender already a tester.\"",
                              "value": "Msg.sender already a tester."
                            },
                            "id": 286,
                            "name": "Literal",
                            "src": "308:30:2"
                          }
                        ],
                        "id": 287,
                        "name": "FunctionCall",
                        "src": "277:62:2"
                      }
                    ],
                    "id": 288,
                    "name": "ExpressionStatement",
                    "src": "277:62:2"
                  },
                  {
                    "id": 289,
                    "name": "PlaceholderStatement",
                    "src": "349:1:2"
                  }
                ],
                "id": 290,
                "name": "Block",
                "src": "267:90:2"
              }
            ],
            "id": 291,
            "name": "ModifierDefinition",
            "src": "248:109:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "register",
              "scope": 320,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "institutionName",
                      "scope": 319,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 292,
                        "name": "ElementaryTypeName",
                        "src": "381:6:2"
                      }
                    ],
                    "id": 293,
                    "name": "VariableDeclaration",
                    "src": "381:29:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "location",
                      "scope": 319,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 294,
                        "name": "ElementaryTypeName",
                        "src": "412:6:2"
                      }
                    ],
                    "id": 295,
                    "name": "VariableDeclaration",
                    "src": "412:22:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "contact",
                      "scope": 319,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 296,
                        "name": "ElementaryTypeName",
                        "src": "436:6:2"
                      }
                    ],
                    "id": 297,
                    "name": "VariableDeclaration",
                    "src": "436:21:2"
                  }
                ],
                "id": 298,
                "name": "ParameterList",
                "src": "380:78:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 299,
                "name": "ParameterList",
                "src": "466:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 274,
                                  "type": "mapping(address => bool)",
                                  "value": "isTester"
                                },
                                "id": 300,
                                "name": "Identifier",
                                "src": "476:8:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 335,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 301,
                                    "name": "Identifier",
                                    "src": "485:3:2"
                                  }
                                ],
                                "id": 302,
                                "name": "MemberAccess",
                                "src": "485:10:2"
                              }
                            ],
                            "id": 303,
                            "name": "IndexAccess",
                            "src": "476:20:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 304,
                            "name": "Literal",
                            "src": "499:4:2"
                          }
                        ],
                        "id": 305,
                        "name": "Assignment",
                        "src": "476:27:2"
                      }
                    ],
                    "id": 306,
                    "name": "ExpressionStatement",
                    "src": "476:27:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct TesterRegistry.Tester storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct TesterRegistry.Tester storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 278,
                                  "type": "mapping(address => struct TesterRegistry.Tester storage ref)",
                                  "value": "testers"
                                },
                                "id": 307,
                                "name": "Identifier",
                                "src": "513:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 335,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 308,
                                    "name": "Identifier",
                                    "src": "521:3:2"
                                  }
                                ],
                                "id": 309,
                                "name": "MemberAccess",
                                "src": "521:10:2"
                              }
                            ],
                            "id": 310,
                            "name": "IndexAccess",
                            "src": "513:19:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "institutionName",
                                "location",
                                "contact"
                              ],
                              "type": "struct TesterRegistry.Tester memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 270,
                                  "type": "type(struct TesterRegistry.Tester storage pointer)",
                                  "value": "Tester"
                                },
                                "id": 311,
                                "name": "Identifier",
                                "src": "535:6:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 293,
                                  "type": "string memory",
                                  "value": "institutionName"
                                },
                                "id": 312,
                                "name": "Identifier",
                                "src": "573:15:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 295,
                                  "type": "string memory",
                                  "value": "location"
                                },
                                "id": 313,
                                "name": "Identifier",
                                "src": "612:8:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 297,
                                  "type": "string memory",
                                  "value": "contact"
                                },
                                "id": 314,
                                "name": "Identifier",
                                "src": "643:7:2"
                              }
                            ],
                            "id": 315,
                            "name": "FunctionCall",
                            "src": "535:126:2"
                          }
                        ],
                        "id": 316,
                        "name": "Assignment",
                        "src": "513:148:2"
                      }
                    ],
                    "id": 317,
                    "name": "ExpressionStatement",
                    "src": "513:148:2"
                  }
                ],
                "id": 318,
                "name": "Block",
                "src": "466:202:2"
              }
            ],
            "id": 319,
            "name": "FunctionDefinition",
            "src": "363:305:2"
          }
        ],
        "id": 320,
        "name": "ContractDefinition",
        "src": "25:645:2"
      }
    ],
    "id": 321,
    "name": "SourceUnit",
    "src": "0:670:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x3Ba28105B6F3dAF6AB55Ef7b92DCBcB4c70Cd5F9",
      "transactionHash": "0xdee08f598c96fd2361ff6f2b61c910ddef3a98784eb246ef01cdf03d3f6174b8"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-15T05:31:22.245Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}